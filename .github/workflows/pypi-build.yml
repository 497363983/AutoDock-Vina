name: Build/upload sdist and wheel Package to PyPI

on:
  push:
    branches:
      - master
      - develop
    paths-ignore:
      - 'example/**'
      - 'docs/**'
      - 'data/**'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - 'example/**'
      - 'docs/**'
      - 'data/**'
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-10.15]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.0.1
        env:
          package-dir: ./build/python
          output-dir: wheelhouse
          CIBW_BEFORE_ALL_MACOS: |
            brew install boost swig
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y boost-devel swig
      - name: Upload artifacts for inspection
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel twine flake8
      - name: Build sdist
        run: python setup.py sdist
      - name: Upload artifacts for inspection
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Publish sdist and wheel to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_FORLILAB }}
        run: |
          twine upload dist/*
